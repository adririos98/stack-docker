input {
    beats {
        port => "5044"
    }
}

output {
  elasticsearch {
    hosts    => [ 'elasticsearch' ]
    user     => 'elastic'
    password => "${ELASTIC_PASSWORD}"  # read password from logstash.keystore
    ssl => true
    cacert => '/usr/share/logstash/config/certs/ca/ca.crt'
  }
}

filter {
  if [message] =~ "Building"{
      grok {
        match => [ "message", "%{GREEDYDATA:log_timestamp}  %{WORD:estado} %{GREEDYDATA:apache} -  %{GREEDYDATA:message} : %{GREEDYDATA:proxy} %{GREEDYDATA:apache}" ]
        overwrite => [ "message" ]
      }
      mutate {
        remove_field => [ "log_timestamp", "apache"]
      }
  }
}

filter {
    if [message] =~ "CarbonCoreActivator" {
         grok {
                 match => { "message" => "\ATID: \[%{GREEDYDATA:tenant_id}\] \[] \[%{GREEDYDATA:timestamp}\]  %{LOGLEVEL:loglevel} \{org\.wso2\.carbon\.core\.internal\.CarbonCoreActivator} -  %{GREEDYDATA:key} : %{GREEDYDATA:value} \{org\.wso2\.carbon\.core\.internal\.CarbonCoreActivator}" }
         }
    } else if [message] =~ "ERROR" {
         grok {
                 match => { "message" => "\ATID: \[%{GREEDYDATA:tenant_id}\] \[] \[%{GREEDYDATA:timestamp}\] %{LOGLEVEL:loglevel} \{%{GREEDYDATA:error_generator}\} - %{GREEDYDATA:error_message} \{%{GREEDYDATA}\}" }
         }
    } else if [source] =~ "http_access_management_console" {
         grok {
                 match => { "message" => "\A%{IP:client_ip} - - \[%{GREEDYDATA:timestamp}\] \"%{GREEDYDATA:request}\" %{NUMBER:status_code} %{GREEDYDATA} \"%{GREEDYDATA:url}\" \"%{GREEDYDATA:browser_details}\"" }
         }
    } else if [message] =~ "logged" {
         grok {
                 match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]  %{LOGLEVEL:loglevel} -  \'%{GREEDYDATA:user} \[%{GREEDYDATA:tenant_id}\]\' %{GREEDYDATA:action} at \[%{TIMESTAMP_ISO8601:actiontime}\]"}
         }
    }
}